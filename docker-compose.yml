version: '3.8'

services:
  # Existing services
  frontend-service:
    image: prajyotshende/movie-recc-client:latest
    ports: ["80:80"]
    networks: [movie-recc-network]
    depends_on: [backend-service]
    restart: always

  backend-service:
    image: prajyotshende/movie-recc-server:latest 
    ports: ["3000:3000"]
    networks: [movie-recc-network]
    depends_on: [ml-service]
    restart: always
    environment:
      - MONGODB_URI=mongodb+srv://rakshitpatel910:3At0jkIMdjPzhegb@movie-cluster.ksqkwri.mongodb.net/?retryWrites=true&w=majority&appName=movie-cluster
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5044

  ml-service:
    image: prajyotshende/movie-recc-ml-service:latest
    ports: ["8000:8000"]
    command: ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000"]
    volumes: ["./ml/ml-100k:/app/ml-100k"]
    networks: [movie-recc-network]
    restart: always

  # ELK Stack Services
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks: [movie-recc-network]
    ports: ["9200:9200"]
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:8.8.0
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    networks: [movie-recc-network]
    ports: ["5044:5044"]
    depends_on: [elasticsearch]
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks: [movie-recc-network]
    ports: ["5601:5601"]
    depends_on: [elasticsearch]
    restart: unless-stopped

volumes:
  elasticsearch_data:

networks:
  movie-recc-network:
    driver: bridge